{"version":3,"sources":["components/Dropdown/Dropdown.js","App.js","reportWebVitals.js","index.js"],"names":["Dropdown","state","visible","toggle","setState","prevState","className","type","onClick","this","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRA8BeA,G,kNA1BbC,MAAQ,CACNC,SAAS,G,EAGXC,OAAS,WACP,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAAEH,SAAUG,EAAUH,a,uDAIlD,OACE,sBAAKI,UAAU,WAAf,UACE,wBACEC,KAAK,SACLD,UAAU,mBACVE,QAASC,KAAKN,OAHhB,SAKGM,KAAKR,MAAMC,QAAU,uCAAW,qDAElCO,KAAKR,MAAMC,SACV,qBAAKI,UAAU,iBAAf,0G,GApBaI,c,MCYRC,MAVf,WACE,OACE,qCACE,qJAEA,cAAC,EAAD,QCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3321c6f0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Dropdown.css';\r\n\r\nclass Dropdown extends Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({ visible: !prevState.visible }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Dropdown\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"Dropdown__toggle\"\r\n          onClick={this.toggle}\r\n        >\r\n          {this.state.visible ? 'Скрыть' : 'Показать'}\r\n        </button>\r\n        {this.state.visible && (\r\n          <div className=\"Dropdown__menu\">Выпадающее меню</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dropdown;\r\n","// import Counter from './components/Counter';\r\nimport Counter from './components/Dropdown';\r\nimport './App.css';\r\nimport Dropdown from './components/Dropdown';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <h1>Состояние компонента</h1>\r\n      {/* <Counter /> */}\r\n      <Dropdown />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}